{"version":3,"sources":["components/Table.jsx","components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["Table","props","rows","setNewValues","deleteRow","addMode","useState","key","value","row","setRow","eMode","seteMode","saveValue","e","name","dept","skills","console","log","undefined","rowsNew","splice","alert","cancel","pop","inputElement","placeHolder","i","field","placeholder","onChange","val","target","border","className","map","r","href","onClick","data","onEdit","Search","onSearch","App","setRows","useEffect","localStorage","setItem","JSON","stringify","removeItem","length","filteredRows","filter","includes","parse","getItem","values","indexOf","find","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d7cb5cf8.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction Table(props) {\r\n    const {rows,setNewValues,deleteRow,addMode} = props;\r\n    const [row,setRow] = useState({key:null,value:{}});\r\n    const [eMode,seteMode] = useState(false);\r\n\r\n    const onEdit = (e,data,i) => {\r\n      if(row.key === null && addMode === undefined) {\r\n        seteMode(true);\r\n        setRow({key:i,value:data}); \r\n      } else  {\r\n        alert('Please cancel/save to edit other employee details')\r\n      }\r\n        \r\n    }\r\n\r\n    const onDelete = (e,data) => {\r\n        deleteRow(data)\r\n    }\r\n\r\n    const onChange = (e,i,field) => {\r\n        let val = row.value;\r\n          let value = {...val,[field] :e.target.value};\r\n           setRow({key:i,value});\r\n    }\r\n\r\n   const saveValue = (e) => {\r\n           \r\n            const {name,dept,skills} = row.value;\r\n          console.log('save',row.value)\r\n            if(name === undefined || dept === undefined || skills === undefined) {\r\n              alert('Please add values to save');\r\n              return;\r\n            } else {\r\n              let rowsNew = rows;\r\n              rowsNew.splice(row.key,1,row.value);\r\n              setNewValues(rowsNew);\r\n              setRow({key:null,value:{}})\r\n              seteMode(false);\r\n            }\r\n         \r\n   }\r\n\r\n   const cancel = () => {\r\n    let rowsNew = rows;\r\n    if(!eMode) {\r\n      rowsNew.pop();\r\n      setNewValues(rowsNew);\r\n    }\r\n    setRow({key:null,value:{}})\r\n    seteMode(false);\r\n   }\r\n\r\nconst inputElement = (placeHolder,i,field) => ( <input placeholder={placeHolder}  value={row['value'][field] !== rows[i][field] ? row['value'][field] : rows[i][field]} onChange={(e) => onChange(e,i,field)} />);\r\n  return (\r\n    <>\r\n       <table border=\"1\" className=\"center\">\r\n           <tr>\r\n               <th>Name</th>\r\n               <th>Department</th>\r\n               <th>Skills</th>\r\n               <th>Action</th>\r\n            </tr>\r\n           <tbody>\r\n                   {rows.map((r,i) =>\r\n                    <>{(!eMode || i !== row.key) ? \r\n                    <tr>\r\n                        <td>{r.name === '' ?  inputElement('Name',i,'name') : r.name}</td>\r\n                        <td>{r.dept === '' ?  inputElement('Department',i,'dept') : r.dept}</td>\r\n                        <td>{r.skills === '' ? inputElement('Skills',i,'skills')  : r.skills}</td>\r\n                        {(r.name !== '') ?  (<td><a href=\"#\" onClick={(e) => onEdit(e,r,i)}>Edit</a><br/>\r\n                              <a href=\"#\" onClick={( e) => onDelete(e,r)}>Delete</a></td>) : (    \r\n                              \r\n                              <td>\r\n                    \r\n                                     <a href=\"#\" onClick={() => saveValue(r,i)}>Save</a>\r\n                                        <br />\r\n                                     <a href=\"#\" onClick={(e) => cancel()}>Cancel</a>\r\n                             </td> \r\n                           )}\r\n                    </tr> : \r\n                    (<tr>\r\n                       <td>{inputElement('Name',i,'name')}</td>\r\n                       <td> {inputElement('Department',i,'dept')}</td>\r\n                       <td>{inputElement('Skills',i,'skills')}</td>\r\n                       <td>\r\n                           <a href=\"#\" onClick={() => saveValue(r,i)}>Save</a>\r\n                           <br />\r\n                             <a href=\"#\" onClick={(e) => cancel()}>Cancel</a>\r\n                           </td> \r\n                       </tr>)}\r\n                   </>) \r\n                   }\r\n               \r\n           </tbody>\r\n       </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;","import React,{useState} from 'react';\n\nfunction Search(props) {\n  return (\n    <>\n     <input placeholder=\"Search\" onChange={props.onSearch} />\n    </>\n  );\n}\n\nexport default Search;\n","import React,{useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport Table from './components/Table';\r\nimport Search from './components/Search';\r\n\r\nfunction App() {\r\n  const [rows,setRows] = useState([{\r\n    name:'Praveen',\r\n    dept:'Development',\r\n    skills:'C# ,Javascript'\r\n  }]);\r\n\r\n  useEffect(() => {\r\n  localStorage.setItem('rows',JSON.stringify(rows));\r\n  return () => localStorage.removeItem('rows');\r\n  },[])\r\n\r\n  const onSearch = (e) => {\r\n    if(e.target.value.length > 0) {\r\n      const filteredRows = rows.filter(row => row.name.includes(e.target.value)  || row.dept.includes(e.target.value) || row.skills.includes(e.target.value));\r\n      if(filteredRows.length > 0) {\r\n        setRows([...filteredRows]);\r\n      } else {\r\n        setRows(JSON.parse(localStorage.getItem('rows')));\r\n      }\r\n    } else {\r\n      setRows(JSON.parse(localStorage.getItem('rows')));\r\n    }\r\n    \r\n  \r\n  \r\n  }\r\n  const onAdd =(e) => {\r\n    const values = rows;\r\n    setRows([...values,{name:'',dept:'',skills:''}]);\r\n  }\r\n\r\n  const newValues = (rows) =>{\r\n    const values = rows;\r\n    setRows([...values]);\r\n    localStorage.setItem('rows',JSON.stringify(values));\r\n  }\r\n\r\n  const deleteRow = data => {\r\n    const rowsNew = [...rows];\r\n    const i = rowsNew.indexOf(data)\r\n    rowsNew.splice(i,1);\r\n    localStorage.setItem('rows',JSON.stringify(rowsNew));\r\n    setRows([...rowsNew]);\r\n   \r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <h3>Welcome To HR System</h3>\r\n       <Search onSearch={onSearch} />\r\n       <br/>\r\n       <br/>\r\n       {rows.length > 0 ?\r\n       <Table rows={rows} setRows={setRows} setNewValues={newValues} deleteRow={deleteRow} addMode={rows.find(r => r.name === '' || r.dept === '' || r.skills === '')} />\r\n      : <>No Values in the table, please add new employees</>\r\n      }\r\n       <br />\r\n       <a href=\"#\" onClick={onAdd}>Add Employee</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}